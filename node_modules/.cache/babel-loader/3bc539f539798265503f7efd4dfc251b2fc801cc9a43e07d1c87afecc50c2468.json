{"ast":null,"code":"var _jsxFileName = \"/Users/sunildangal/Desktop/Learning IT/External Project/frontend/src/contexts/cartContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// cartContext.tsx\nimport React, { createContext, useState, useContext, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext(undefined);\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cart, setCart] = useState([]);\n  const [cartCount, setCartCount] = useState(0);\n\n  // Sync cart with localStorage\n  useEffect(() => {\n    const savedCart = JSON.parse(localStorage.getItem(\"cart\") || \"[]\");\n    setCart(savedCart);\n    setCartCount(savedCart.reduce((total, item) => total + item.quantity, 0));\n  }, []);\n  const addToCart = item => {\n    const existingCart = [...cart];\n    const itemIndex = existingCart.findIndex(cartItem => cartItem.id === item.id);\n    if (itemIndex > -1) {\n      existingCart[itemIndex].quantity += 1;\n    } else {\n      existingCart.push(item);\n    }\n    setCart(existingCart);\n    setCartCount(existingCart.reduce((total, cartItem) => total + cartItem.quantity, 0));\n    localStorage.setItem(\"cart\", JSON.stringify(existingCart));\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      cartCount,\n      addToCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"jMj38tR2cmVoA3jj58d1Sbp8ouU=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error(\"useCart must be used within a CartProvider\");\n  }\n  return context;\n};\n_s2(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","CartContext","undefined","CartProvider","children","_s","cart","setCart","cartCount","setCartCount","savedCart","JSON","parse","localStorage","getItem","reduce","total","item","quantity","addToCart","existingCart","itemIndex","findIndex","cartItem","id","push","setItem","stringify","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","context","Error","$RefreshReg$"],"sources":["/Users/sunildangal/Desktop/Learning IT/External Project/frontend/src/contexts/cartContext.tsx"],"sourcesContent":["\n\n\n\n// cartContext.tsx\nimport React, { createContext, useState, useContext, useEffect } from \"react\";\n\ninterface CartItem {\n  id: string;\n  name: string;\n  price: number;\n  image: string;\n  quantity: number;\n}\n\ninterface CartContextProps {\n  cart: CartItem[];\n  cartCount: number;\n  addToCart: (item: CartItem) => void;\n}\n\nconst CartContext = createContext<CartContextProps | undefined>(undefined);\n\nexport const CartProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [cart, setCart] = useState<CartItem[]>([]);\n  const [cartCount, setCartCount] = useState(0);\n\n  // Sync cart with localStorage\n  useEffect(() => {\n    const savedCart = JSON.parse(localStorage.getItem(\"cart\") || \"[]\");\n    setCart(savedCart);\n    setCartCount(savedCart.reduce((total: number, item: CartItem) => total + item.quantity, 0));\n  }, []);\n\n  const addToCart = (item: CartItem) => {\n    const existingCart = [...cart];\n    const itemIndex = existingCart.findIndex((cartItem) => cartItem.id === item.id);\n\n    if (itemIndex > -1) {\n      existingCart[itemIndex].quantity += 1;\n    } else {\n      existingCart.push(item);\n    }\n\n    setCart(existingCart);\n    setCartCount(existingCart.reduce((total, cartItem) => total + cartItem.quantity, 0));\n    localStorage.setItem(\"cart\", JSON.stringify(existingCart));\n  };\n\n  return (\n    <CartContext.Provider value={{ cart, cartCount, addToCart }}>\n      {children}\n    </CartContext.Provider>\n  );\n};\n\nexport const useCart = () => {\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error(\"useCart must be used within a CartProvider\");\n  }\n  return context;\n};\n"],"mappings":";;;AAIA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAgB9E,MAAMC,WAAW,gBAAGN,aAAa,CAA+BO,SAAS,CAAC;AAE1E,OAAO,MAAMC,YAAqD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrF,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAa,EAAE,CAAC;EAChD,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;;EAE7C;EACAE,SAAS,CAAC,MAAM;IACd,MAAMY,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC;IAClEP,OAAO,CAACG,SAAS,CAAC;IAClBD,YAAY,CAACC,SAAS,CAACK,MAAM,CAAC,CAACC,KAAa,EAAEC,IAAc,KAAKD,KAAK,GAAGC,IAAI,CAACC,QAAQ,EAAE,CAAC,CAAC,CAAC;EAC7F,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,SAAS,GAAIF,IAAc,IAAK;IACpC,MAAMG,YAAY,GAAG,CAAC,GAAGd,IAAI,CAAC;IAC9B,MAAMe,SAAS,GAAGD,YAAY,CAACE,SAAS,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,EAAE,KAAKP,IAAI,CAACO,EAAE,CAAC;IAE/E,IAAIH,SAAS,GAAG,CAAC,CAAC,EAAE;MAClBD,YAAY,CAACC,SAAS,CAAC,CAACH,QAAQ,IAAI,CAAC;IACvC,CAAC,MAAM;MACLE,YAAY,CAACK,IAAI,CAACR,IAAI,CAAC;IACzB;IAEAV,OAAO,CAACa,YAAY,CAAC;IACrBX,YAAY,CAACW,YAAY,CAACL,MAAM,CAAC,CAACC,KAAK,EAAEO,QAAQ,KAAKP,KAAK,GAAGO,QAAQ,CAACL,QAAQ,EAAE,CAAC,CAAC,CAAC;IACpFL,YAAY,CAACa,OAAO,CAAC,MAAM,EAAEf,IAAI,CAACgB,SAAS,CAACP,YAAY,CAAC,CAAC;EAC5D,CAAC;EAED,oBACEpB,OAAA,CAACC,WAAW,CAAC2B,QAAQ;IAACC,KAAK,EAAE;MAAEvB,IAAI;MAAEE,SAAS;MAAEW;IAAU,CAAE;IAAAf,QAAA,EACzDA;EAAQ;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC5B,EAAA,CA/BWF,YAAqD;AAAA+B,EAAA,GAArD/B,YAAqD;AAiClE,OAAO,MAAMgC,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAGxC,UAAU,CAACI,WAAW,CAAC;EACvC,IAAI,CAACoC,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;EAC/D;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}